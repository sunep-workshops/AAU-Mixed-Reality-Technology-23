// source:
// https://github.com/mrvux/dx11-vvvv-girlpower/blob/master/nodes/texture11/Filter/Metallica.tfx

[Category("Filter.Experimental")]
[Summary("")]
shader VectorField_TextureFX : FilterBase
{
    [Color]
    float4 ColorA = float4(1.0f, 0.0f, 0.0f, 1.0f);
    [Color]
    float4 ColorB = float4(0.0f, 1.0f, 0.00f, 1.0f);
	
    float Angle = 0.25f;
    float2 BumpAmount = float2(1.0f, 1.0f);
    float2 BumpGamma = float2(0.0f, 0.0f);
    
	

    float Emboss = 1.0f;
    float Shape = 0.0f;

    float MaxRadius =1.0f;

    float mx(float3 p)
    {
        return max(p.x, max(p.y, p.z));
    }

    //diffent implementation than in Effects/Common/ShaderUtils.sdsl
    override float2 r2d(float2 x, float a)
	
    {
        a *= acos(-1)*2;
        
        return float2(cos(a)*x.x + sin(a)*x.y, cos(a)*x.y - sin(a)*x.x);
    }

    #define gam(x,y) sign(x)*pow(abs(x),(y))

    float4 Filter(float4 tex0col)
    {
        float2 uv = streams.TexCoord;
        float2 R = 1/Texture0TexelSize;
    
        float4 col = 0;
        float lod = log2(max(R.x, R.y));
        float kk = 0;

        for (float i=0; i<min(lod-(1-MaxRadius*lod), 14); i++)
        {
            float2 off = pow(2,i)/max(R.x,R.y);
            off *= 0.5;
            
            float k = 1./pow(2, i*Shape - lod)*saturate(MaxRadius*lod - i);

            float dx = (mx(Texture0.SampleLevel(Sampler0, uv - off*float2(1 ,0), i).xyz) - mx(Texture0.SampleLevel(Sampler0, uv + off*float2(1, 0),i).xyz));
            float dy = (mx(Texture0.SampleLevel(Sampler0, uv - off*float2(0, 1), i).xyz) - mx(Texture0.SampleLevel(Sampler0, uv + off*float2(0,1),i).xyz));

            col.xy += float2(dx, dy) * sqrt(R.x/R) * k;
            col.z += length(float2(dx, dy) * k);
            
            kk += k;
        }

        col.xy /= pow((col.z)*.1, .3)/.1 + .00000001;

        float dd = Emboss/pow((kk), .7)*8;

        col.z = pow(saturate(1-dd*length(col.xy)), .5);
        col.xy = col.xy*dd;

        float2 dir = col.xy;
        col = 0;
        
        dir = gam(dir, pow(2, BumpGamma*sqrt(smoothstep(0, 1, 1*(dir)))))/2;

        
        col += lerp(ColorA*pow(2, 1), 0, r2d(dir, Angle).x*BumpAmount.x + .5)*2-1;
        col += lerp(ColorB*pow(2, 1), 0, r2d(dir, Angle + .25).x*BumpAmount.y + .5)*(1 - (r2d(dir, Angle).x))*2-1;
		
        col.a=Texture0.SampleLevel(Sampler0, uv, 0).a;

        return col;
    }
};